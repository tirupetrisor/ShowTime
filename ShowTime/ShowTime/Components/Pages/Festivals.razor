@page "/Festivals"
@using ShowTime.BusinessLogic.Abstractions
@using ShowTime.BusinessLogic.Dtos
@using System.ComponentModel.DataAnnotations
@inject IFestivalService FestivalService
@rendermode InteractiveServer



<div class="container">
    <div class="page-title-section">
        <h1 class="page-title">🎪 Festival Management</h1>
        <p class="page-subtitle">Discover and manage amazing music festivals</p>
    </div>
    <!-- Search and Filter Section -->
    <div class="search-filter-section mb-4">
        <div class="card search-card">
            <div class="card-body">
                <h5 class="text-center mb-3">🔍 Search & Filter Festivals</h5>
                <div class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label fw-bold">🎪 Search by Name</label>
                        <input type="text" @bind="searchTerm" @bind:event="oninput" 
                               class="form-control search-input" placeholder="Enter festival name..." />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label fw-bold">📍 Filter by Location</label>
                        <select @bind="selectedLocation" @bind:event="onchange" class="form-select search-input">
                            <option value="">All Locations</option>
                            @foreach (var location in availableLocations)
                            {
                                <option value="@location">@location</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label fw-bold">📅 Filter by Year</label>
                        <select @bind="selectedYear" @bind:event="onchange" class="form-select search-input">
                            <option value="">All Years</option>
                            @foreach (var year in availableYears)
                            {
                                <option value="@year">@year</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-clear w-100" @onclick="ClearFilters">
                            🗑️ Clear
                        </button>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(_searchTerm) || !string.IsNullOrEmpty(_selectedLocation) || !string.IsNullOrEmpty(_selectedYear))
                {
                    <div class="mt-3 text-center">
                        <span class="badge results-badge">
                            Found @filteredFestivals.Count of @allFestivals.Count festivals
                        </span>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Add New Festival Section -->
    <div class="card add-festival-card">
        <div class="card-body">
            <h3 class="text-center mb-4">✨ Add New Festival</h3>
            <EditForm Model="newFestival" OnValidSubmit="AddFestival" FormName="AddFestivalForm">
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">🎪 Festival Name</label>
                        <InputText @bind-Value="newFestival.Name" class="form-control form-control-modern" placeholder="Enter festival name"/>
                        <ValidationMessage For="@(() => newFestival.Name)" class="text-warning fw-bold" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold">📍 Location</label>
                        <InputText @bind-Value="newFestival.Location" class="form-control form-control-modern" placeholder="Enter location"/>
                        <ValidationMessage For="@(() => newFestival.Location)" class="text-warning fw-bold" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">📅 Start Date</label>
                        <InputDate @bind-Value="newFestival.StartDate" class="form-control form-control-modern"/>
                        <ValidationMessage For="@(() => newFestival.StartDate)" class="text-warning fw-bold" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold">📅 End Date</label>
                        <InputDate @bind-Value="newFestival.EndDate" class="form-control form-control-modern"/>
                        <ValidationMessage For="@(() => newFestival.EndDate)" class="text-warning fw-bold" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">🖼️ Splash Art URL</label>
                        <InputText @bind-Value="newFestival.SplashArt" class="form-control form-control-modern" placeholder="Enter image URL"/>
                        <ValidationMessage For="@(() => newFestival.SplashArt)" class="text-warning fw-bold" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold">👥 Capacity</label>
                        <InputNumber @bind-Value="newFestival.Capacity" class="form-control form-control-modern" placeholder="Enter capacity"/>
                        <ValidationMessage For="@(() => newFestival.Capacity)" class="text-warning fw-bold" />
                    </div>
                </div>
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-add btn-modern">
                        <i class="fas fa-plus"></i> Add Festival
                    </button>
                </div>
            </EditForm>
        </div>
    </div>

    <!-- Festivals Grid Section -->
    <h2 class="section-title">🌟 Our Festivals</h2>

    @if (filteredFestivals.Count == 0 && allFestivals.Count > 0)
    {
        <div class="no-results">
            <h4>🔍 No festivals found!</h4>
            <p>Try adjusting your search criteria or clear the filters</p>
        </div>
    }
    else if (allFestivals.Count == 0)
    {
        <div class="no-festivals">
            <h4>🎭 No festivals registered yet!</h4>
            <p>Start by adding your first festival above</p>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var festival in filteredFestivals)
            {
                <div class="col-lg-4 col-md-6">
                    <div class="card festival-card">
                        <img class="festival-image" src="@festival.SplashArt" alt="@festival.Name" 
                             onerror="this.src='https://via.placeholder.com/400x250/4facfe/white?text=No+Image'" />
                        <div class="festival-info">
                            <h5 class="festival-name">@festival.Name</h5>
                            <p class="festival-location">📍 @festival.Location</p>
                            <p class="festival-dates">📅 @festival.StartDate.ToString("MMM dd") - @festival.EndDate.ToString("MMM dd, yyyy")</p>
                            <span class="festival-capacity">👥 @festival.Capacity.ToString("N0") people</span>
                            
                            @if (editingFestivalId == festival.Id)
                            {
                                <div class="edit-form">
                                    <h6 class="text-white mb-3">✏️ Edit Festival</h6>
                                    <EditForm Model="updateFestival" OnValidSubmit="UpdateFestival" FormName="@($"UpdateFestivalForm_{festival.Id}")">
                                        <DataAnnotationsValidator />
                                        <div class="mb-3">
                                            <label class="form-label">🎪 Name</label>
                                            <InputText @bind-Value="updateFestival.Name" class="form-control"/>
                                            <ValidationMessage For="@(() => updateFestival.Name)" class="text-warning fw-bold" />
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">📍 Location</label>
                                            <InputText @bind-Value="updateFestival.Location" class="form-control"/>
                                            <ValidationMessage For="@(() => updateFestival.Location)" class="text-warning fw-bold" />
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">📅 Start Date</label>
                                            <InputDate @bind-Value="updateFestival.StartDate" class="form-control"/>
                                            <ValidationMessage For="@(() => updateFestival.StartDate)" class="text-warning fw-bold" />
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">📅 End Date</label>
                                            <InputDate @bind-Value="updateFestival.EndDate" class="form-control"/>
                                            <ValidationMessage For="@(() => updateFestival.EndDate)" class="text-warning fw-bold" />
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">🖼️ Splash Art URL</label>
                                            <InputText @bind-Value="updateFestival.SplashArt" class="form-control"/>
                                            <ValidationMessage For="@(() => updateFestival.SplashArt)" class="text-warning fw-bold" />
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">👥 Capacity</label>
                                            <InputNumber @bind-Value="updateFestival.Capacity" class="form-control"/>
                                            <ValidationMessage For="@(() => updateFestival.Capacity)" class="text-warning fw-bold" />
                                        </div>
                                        <div class="d-flex gap-2">
                                            <button type="submit" class="btn btn-save">
                                                <i class="fas fa-check"></i> Save
                                            </button>
                                            <button type="button" class="btn btn-cancel" @onclick="CancelEdit">
                                                <i class="fas fa-times"></i> Cancel
                                            </button>
                                        </div>
                                    </EditForm>
                                </div>
                            }
                        </div>
                        <div class="action-buttons">
                            @if (editingFestivalId != festival.Id)
                            {
                                <button class="btn btn-edit" @onclick="() => StartEdit(festival)">
                                    <i class="fas fa-edit"></i> Edit
                                </button>
                            }
                            <button class="btn btn-delete" @onclick="async () => await DeleteFestival(festival.Id)">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private IList<FestivalGetDto> allFestivals = new List<FestivalGetDto>();
    private IList<FestivalGetDto> filteredFestivals = new List<FestivalGetDto>();
    private IList<string> availableLocations = new List<string>();
    private IList<int> availableYears = new List<int>();
    private int? editingFestivalId = null;
    
    private string _searchTerm = string.Empty;
    private string searchTerm 
    { 
        get => _searchTerm; 
        set 
        { 
            _searchTerm = value; 
            FilterFestivals(); 
        } 
    }
    
    private string _selectedLocation = string.Empty;
    private string selectedLocation 
    { 
        get => _selectedLocation; 
        set 
        { 
            _selectedLocation = value; 
            FilterFestivals(); 
        } 
    }
    
    private string _selectedYear = string.Empty;
    private string selectedYear 
    { 
        get => _selectedYear; 
        set 
        { 
            _selectedYear = value; 
            FilterFestivals(); 
        } 
    }

    [SupplyParameterFromForm] 
    private FestivalCreateDto newFestival { get; set; } = new();

    private FestivalUpdateDto updateFestival { get; set; } = new();
    
    protected override async Task OnInitializedAsync()
    {
        await LoadFestivals();
    }

    private async Task LoadFestivals()
    {
        allFestivals = await FestivalService.GetAllFestivalsAsync();
        UpdateAvailableFilters();
        FilterFestivals();
    }

    private void UpdateAvailableFilters()
    {
        availableLocations = allFestivals
            .Select(f => f.Location)
            .Where(l => !string.IsNullOrEmpty(l))
            .Distinct()
            .OrderBy(l => l)
            .ToList();

        availableYears = allFestivals
            .Select(f => f.StartDate.Year)
            .Distinct()
            .OrderBy(y => y)
            .ToList();
    }

    private void FilterFestivals()
    {
        filteredFestivals = allFestivals.Where(festival =>
            (string.IsNullOrEmpty(_searchTerm) || 
             festival.Name.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase)) &&
            (string.IsNullOrEmpty(_selectedLocation) || 
             festival.Location.Equals(_selectedLocation, StringComparison.OrdinalIgnoreCase)) &&
            (string.IsNullOrEmpty(_selectedYear) || 
             festival.StartDate.Year.ToString() == _selectedYear)
        ).ToList();
        
        StateHasChanged();
    }

    private void ClearFilters()
    {
        _searchTerm = string.Empty;
        _selectedLocation = string.Empty;
        _selectedYear = string.Empty;
        FilterFestivals();
    }

    private async Task AddFestival()
    {
        await FestivalService.AddFestivalAsync(newFestival);
        newFestival = new();
        await LoadFestivals();
    }

    private void StartEdit(FestivalGetDto festival)
    {
        editingFestivalId = festival.Id;
        updateFestival = new FestivalUpdateDto
        {
            Id = festival.Id,
            Name = festival.Name,
            Location = festival.Location,
            StartDate = festival.StartDate,
            EndDate = festival.EndDate,
            SplashArt = festival.SplashArt,
            Capacity = festival.Capacity
        };
    }

    private void CancelEdit()
    {
        editingFestivalId = null;
        updateFestival = new();
    }

    private async Task UpdateFestival()
    {
        await FestivalService.UpdateFestivalAsync(updateFestival);
        editingFestivalId = null;
        updateFestival = new();
        await LoadFestivals();
    }

    private async Task DeleteFestival(int id)
    {
        await FestivalService.DeleteFestivalAsync(id);
        await LoadFestivals();
    }
} 


<style>
    /* Page Title Section */
    .page-title-section {
        text-align: center;
        padding: 2rem 0 1rem 0;
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        background: linear-gradient(45deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .page-subtitle {
        font-size: 1.2rem;
        color: #6c757d;
        font-weight: 500;
        margin: 0;
    }

    .search-filter-section {
        margin-bottom: 2rem;
    }

    .search-card {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        border: none;
        border-radius: 20px;
        color: white;
        box-shadow: 0 10px 30px rgba(79, 172, 254, 0.3);
    }

    .search-card .card-body {
        padding: 2rem;
    }

    .search-input {
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 15px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        padding: 12px 16px;
        backdrop-filter: blur(10px);
    }

    .search-input::placeholder {
        color: rgba(255, 255, 255, 0.7);
    }

    .search-input:focus {
        border-color: rgba(255, 255, 255, 0.8);
        box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
        background: rgba(255, 255, 255, 0.2);
        color: white;
    }

    .search-input option {
        background: #2c3e50;
        color: white;
    }

    .btn-clear {
        background: linear-gradient(45deg, #868e96, #6c757d);
        color: white;
        border: none;
        border-radius: 15px;
        padding: 12px 16px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-clear:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(134, 142, 150, 0.4);
        color: white;
    }

    .results-badge {
        background: linear-gradient(45deg, #43e97b, #38f9d7);
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .no-results {
        text-align: center;
        padding: 4rem 2rem;
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        color: white;
        border-radius: 20px;
        font-size: 1.2rem;
    }

    .add-festival-card {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        border: none;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(79, 172, 254, 0.3);
        color: white;
        margin-bottom: 3rem;
    }

    .add-festival-card .card-body {
        padding: 2rem;
    }

    .form-control-modern {
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 15px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        padding: 12px 20px;
        margin-bottom: 1rem;
        backdrop-filter: blur(10px);
    }

    .form-control-modern::placeholder {
        color: rgba(255, 255, 255, 0.7);
    }

    .form-control-modern:focus {
        border-color: rgba(255, 255, 255, 0.8);
        box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
        background: rgba(255, 255, 255, 0.2);
    }

    .btn-modern {
        border-radius: 25px;
        padding: 12px 30px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
        border: none;
    }

    .btn-add {
        background: linear-gradient(45deg, #43e97b, #38f9d7);
        color: white;
    }

    .btn-add:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(67, 233, 123, 0.4);
        color: white;
    }

    .festival-card {
        border: none;
        border-radius: 20px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        background: white;
    }

    .festival-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .festival-image {
        height: 250px;
        object-fit: cover;
        width: 100%;
        transition: transform 0.3s ease;
    }

    .festival-card:hover .festival-image {
        transform: scale(1.05);
    }

    .festival-info {
        padding: 1.5rem;
        background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    }

    .festival-name {
        font-size: 1.4rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }

    .festival-location {
        color: #7f8c8d;
        font-size: 0.95rem;
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    .festival-dates {
        color: #e74c3c;
        font-size: 0.9rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .festival-capacity {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-block;
    }

    .action-buttons {
        padding: 1rem 1.5rem;
        background: #f8f9fa;
        display: flex;
        gap: 10px;
        justify-content: space-between;
    }

    .btn-edit {
        background: linear-gradient(45deg, #4ecdc4, #44a08d);
        color: white;
        border-radius: 20px;
        padding: 8px 20px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .btn-edit:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(78, 205, 196, 0.4);
        color: white;
    }

    .btn-delete {
        background: linear-gradient(45deg, #ff6b6b, #ee5a52);
        color: white;
        border-radius: 20px;
        padding: 8px 20px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .btn-delete:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(255, 107, 107, 0.4);
        color: white;
    }

    .edit-form {
        background: linear-gradient(145deg, #667eea, #764ba2);
        padding: 1.5rem;
        border-radius: 15px;
        margin-top: 1rem;
    }

    .edit-form .form-control {
        border-radius: 10px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        background: rgba(255, 255, 255, 0.1);
        color: white;
        margin-bottom: 1rem;
    }

    .edit-form .form-control:focus {
        border-color: rgba(255, 255, 255, 0.8);
        box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
        background: rgba(255, 255, 255, 0.2);
    }

    .edit-form label {
        color: white;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .btn-save {
        background: linear-gradient(45deg, #51cf66, #40c057);
        color: white;
        border-radius: 15px;
        padding: 8px 20px;
        font-weight: 600;
    }

    .btn-cancel {
        background: linear-gradient(45deg, #868e96, #6c757d);
        color: white;
        border-radius: 15px;
        padding: 8px 20px;
        font-weight: 600;
    }

    .no-festivals {
        text-align: center;
        padding: 4rem 2rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 20px;
        font-size: 1.2rem;
    }

    .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2c3e50;
        text-align: center;
        margin-bottom: 3rem;
        position: relative;
    }

    .section-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        border-radius: 2px;
    }

    .validation-message {
        color: #ffd93d !important;
        font-weight: bold;
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: block;
    }
</style>